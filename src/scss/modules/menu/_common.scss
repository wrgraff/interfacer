$menu-breakpoints: $breakpoints;

.menu {
	position: relative;
    display: flex;
    flex-wrap: wrap;
    margin: 0;
    padding: 0;
    list-style: none;
}

// Menu directions
.menu_vertical {
    flex-direction: column;
}
@each $breakpoint-name, $breakpoint-value in $menu-breakpoints {
    @media screen and (min-width: $breakpoint-value) {
        .menu_#{$breakpoint-name} {
            &_horizontal {
                flex-direction: row;
            }
            &_vertical {
                flex-direction: column;
            }
        }
    }
}

.menu_dropdown {
    position: absolute;
    top: 100%;
	left: 100%;
    min-width: 200px;
    padding: $bit 0;
    background-color: color(white);
    border: 1px solid color(light-gray);
    border-radius: $radius;
    box-shadow: shadow(1-lvl);
    visibility: hidden;
    opacity: 0;
    transform: translateX(100%);
    z-index: 2;
    transition: opacity 250ms, transform 250ms, visibility 1ms linear 250ms;

	.menu__item_opened > & {
        visibility: visible;
        opacity: 1;
        transform: translateY(0);
        transition: opacity 250ms, transform 250ms;
    }

    .menu_vertical & {
        top: 0;
		right: 0;
        left: 0;
    }

	@include breakpoint(medium) {
    	left: 0;
    	transform: translateY(-$bit);
	    transition: opacity 250ms, transform 1ms linear 250ms, visibility 1ms linear 250ms;

	    .menu__item:hover > &,
	    .menu__item:focus-within > & {
	        visibility: visible;
	        opacity: 1;
	        transform: translateY(0);
	        transition: opacity 250ms, transform 250ms;
	    }

	    .menu_vertical & {
	        top: -$bit - 1px;
			right: auto;
	        left: 100%;
	    }
	}
}

.menu .menu:not(.menu_dropdown) {
	margin-left: $bit * 2;
}

.menu__item {
    transition: background-color 250ms;

    &:hover {
        background-color: color(light-gray);
    }

	@include breakpoint(medium) {
	    position: relative;
	}
}
.menu__item_title {
	font-weight: font-weight(bold);
	border-bottom: 1px solid color(light-gray);
}
.menu__item_return {
	position: absolute;
	top: 0;
	right: 0;

	padding: 8px;

	&:hover {
		background-color: transparent;
	}

	@include breakpoint(medium) {
		right: auto;
		left: 100%;
	}
}
.menu__item_opened {
    background-color: color(light-gray);
}

.menu__return {
	position: relative;
	width: 40px;
	height: 40px;
	background-color: color(light-gray);
	border: none;
	border-radius: 50%;

	&::before,
	&::after {
		content: '';

		position: absolute;
		top: 50%;
		left: 50%;

		display: block;
		width: 20px;
		height: 2px;
		margin: -1px 0 0 -10px;

		background-color: color(black);

		transform: rotate(45deg);
	}
	&::after {
		transform: rotate(-45deg);
	}
}

.menu__link {
    display: block;
    padding: ($bit * 1.5) ($bit * 2);
    color: color(black);
    border-radius: $radius;
    transition: background-color 250ms, color 250ms;
    outline-offset: -2px;

    .menu_vertical & {
        border-radius: 0;
    }
    &:hover {
        color: color(primary);
    }
    &:focus {
        outline-offset: -2px;
        outline-width: 2px;
        outline-style: solid;
        outline-color: rgba(color(primary), .2);
    }

    .menu__item_active > & {
        color: color(white);
        background-color: color(primary);
        outline-color: rgba(color(white), .5);

        &:hover {
            color: color(white);
            background-color: smart-scale(color(primary));
        }
    }
    .menu__item_dropdown > & {
        position: relative;
        padding-right: $bit * 4;

        &::after {
            content: '';
            position: absolute;
            right: $bit * 2;
            top: calc(50% - #{$bit / 4});
            transform: translateY(-50%) rotate(45deg);
            width: $bit * .75;
            height: $bit * .75;
            border-style: solid;
            border-width: 0 2px 2px 0;
            border-color: color(black);
            opacity: .5;
            transition: border-color 250ms;

            .menu_vertical & {
                top: 50%;
                transform: translateY(-50%) rotate(-45deg);
            }
        }
        &:hover::after {
            border-color: color(primary);
        }
    }
    .menu__item_dropdown.menu__item_active > & {
        &::after {
            border-color: color(white);
        }
    }
}
